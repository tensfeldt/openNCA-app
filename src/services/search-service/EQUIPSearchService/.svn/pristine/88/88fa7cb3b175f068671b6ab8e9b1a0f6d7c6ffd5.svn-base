package com.pfizer.equip.searchservice.indexer;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Manages thread that does the indexing.
 * 
 * @author HeinemanWP
 *
 */
public class IndexerRunner {
	private static final int INDEXING_SLEEP_TIME = 3000;
	private static Logger log = LoggerFactory.getLogger(IndexerRunner.class);
	private ExecutorService service;
	private boolean running = false;
	private Indexer indexer = new Indexer();

	public IndexerRunner() {
		service = Executors.newSingleThreadExecutor();
	}

	public void start() {
		if (!running) {
			service.execute(new Runnable() {
	
				@Override
				public void run() {
					while(true) {
						process();
					}
				}});
			running = true;
		}
	}
	
	public void stop() {
		if (!service.isShutdown()) {
			service.shutdown();
		}
		running = false;
	}
	
	private void process() {
		try {
			indexer.index();
		} catch (IndexerException ex) {
			log.error("", ex);
		}
		try {
			Thread.sleep(INDEXING_SLEEP_TIME);
		} catch (InterruptedException ex) {
			log.error("", ex);
		}
	}
}
